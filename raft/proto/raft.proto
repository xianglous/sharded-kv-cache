syntax = "proto3";

package raft;

option go_package = "cs426.yale.edu/final/raft/proto";

message VoteRequest {
	int64 term
	int64 candidate_id
	int64 last_log_index 
    int64 last_log_term
}

message VoteReply {
    int64 term
	bool vote_granted
}

message KvCommand {
    
}

message LogEntry {
	int64 term   
	Command interface{}

}

message AppendEntriesRequest {
	int64 term
	int64 leader_id     
	int64 prev_log_index 
	int64 prev_log_term  
	repeated LogEntry entries
	LeaderCommit int
}

message SetRequest {
	string key = 1;
	string value = 2;
	int64 ttl_ms = 3;
}

message DeleteRequest {
	string key = 1;
}

message GetResponse {
	string value = 1;
	bool was_found = 2;
	bool redirect = 3;
	string redirect_node_name = 4;
}

message SetResponse {}
message DeleteResponse {}


message GetShardContentsRequest {
	int32 shard = 1;
}

message GetShardValue {
	string key = 1;
	string value = 2;
	int64 ttl_ms_remaining = 3;
}
message GetShardContentsResponse {
	repeated GetShardValue values = 1;
}

service Kv {
	rpc Get(GetRequest) returns (GetResponse);
	rpc Set(SetRequest) returns (SetResponse);
	rpc Delete(DeleteRequest) returns (DeleteResponse);

	rpc GetShardContents(GetShardContentsRequest) returns (GetShardContentsResponse);
}